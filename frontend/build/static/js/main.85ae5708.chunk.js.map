{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/Search.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","actions/productActions.js","components/LastProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","screens/CartScreen.js","actions/cartActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productCreate","success","productUpdate","productDelete","createReview","lastProducts","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","deleteUser","userUpdate","cartItemsStorage","localStorage","getItem","JSON","parse","userInfoStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Search","useState","keysearch","setKeysearch","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","Control","name","onChange","target","value","Button","variant","Header","useSelector","useDispatch","Navbar","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","is_admin","Footer","Row","Col","md","href","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","num_reviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","listProducts","listProductsDetails","createProduct","post","LastProductCarousel","useEffect","Carousel","interval","key","Image","fluid","Caption","HomeScreen","search","console","log","sm","lg","xl","ProductScreen","match","quantity","setQuantity","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","alt","ListGroup","description","count_in_stock","xs","Array","keys","disabled","length","review","created_at","substring","productId","Group","controlId","Label","raw","CartScreen","Number","split","countInStock","setItem","stringify","addToCart","deleteFromCartHandler","deleteCart","rounded","reduce","acc","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","total_price","is_paid","paid_date","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","values","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","toFixed","shippingPrice","totalPrice","lenght","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","order_items","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","username","shipping_address","postal_code","is_delivered","delivered_at","payment_method","shipping_price","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","size","category","brand","ProductEditScreen","setDescription","setImage","setCategory","setBrand","setPrice","setCountInStock","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","path","component","exact","py","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.85ae5708.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, createReviewReducer, lastProductReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer, } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    createReview: createReviewReducer,\r\n    lastProducts: lastProductReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    deleteUser: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n})\r\n\r\nconst cartItemsStorage = localStorage.getItem(`cartItems`) ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsStorage, shippingAddress: shippingAddressStorage },\r\n    userLogin: { userInfo: userInfoStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_LAST_REQUEST,\r\n    PRODUCT_LAST_SUCCESS,\r\n    PRODUCT_LAST_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const createReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const lastProductReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LAST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LAST_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_LAST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_LAST_REQUEST = 'PRODUCT_LAST_REQUEST'\r\nexport const PRODUCT_LAST_SUCCESS = 'PRODUCT_LAST_SUCCESS'\r\nexport const PRODUCT_LAST_FAIL = 'PRODUCT_LAST_FAIL'","import {\r\n    CART_ADD_ITEM,\r\n    CART_DELETE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_DELETE_ITEM = 'CART_DELETE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import axios from 'axios'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n// API call for usertoken\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password }, config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password }, config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        // I need to load in the new user data and see it in the form once it updated\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom' // useHistory is going to allow us to do is have access to the history inside of our components.\r\n\r\nfunction Search() {\r\n\r\n    const [keysearch, setKeysearch] = useState('')\r\n\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keysearch) {\r\n            history.push(`/?keysearch=${keysearch}`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Form\r\n            onSubmit={submitHandler} className='d-flex'\r\n        >\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeysearch(e.target.value)}\r\n                className='mr-sm-2 p-1'\r\n            >\r\n            </Form.Control>\r\n            <Button\r\n                variant='warning'\r\n                type='submit'\r\n                className='search-button p-1'\r\n            >\r\n                <i className=\"fa-brands fa-searchengin\"></i>\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport Search from './Search'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => (\r\n        dispatch(logout())\r\n    )\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className='color-nav' variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>G-Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className=\"fas fa-cart-shopping\" /> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            <i className=\"fa-regular fa-user\" /> Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        <i className=\"fa-solid fa-arrow-right-from-bracket\" /> Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user' /> Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.is_admin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/users'>\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/products'>\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orders'>\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                        <div className='ms-auto'>\r\n                            <Search />\r\n                        </div>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container className='py-5'>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h4>G-Shop</h4>\r\n                        <p>So why do graphics cards cost so much right now?\r\n                            It's more than just the scalpers and cryptocurrency geeks that everyone likes to blame\r\n                        </p>\r\n                    </Col>\r\n                    <Col md={3} >\r\n                        <div>\r\n                            <a href='https://goo.gl/maps/Jy2meESM4pJehZSo7' target=\"_blank\" className='text-link'>\r\n                                <i className='fa-solid fa-location-dot' /> Kyiv, Ukraine\r\n                            </a>\r\n                        </div>\r\n                        <div>\r\n                            <a href='tel:+(00)990000000' target=\"_blank\" className='text-link'>\r\n                                <i className='fa-solid fa-phone' /> +(380) 99 000 00 00\r\n                            </a>\r\n                        </div>\r\n                        <div>\r\n                            <a href='mailto:g-shop@email.com' target=\"_blank\" className='text-link'>\r\n                                <i className='fa-solid fa-envelope' /> g-shop@email.com\r\n                            </a>\r\n                        </div>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <div className='icons text-center p-2'>\r\n                            <a href='https://www.instagram.com/' target=\"_blank\"><i className=\"fa-brands fa-instagram-square\" /></a>\r\n                            <a href='https://www.facebook.com/' target=\"_blank\"><i className=\"fa-brands fa-facebook-square\" /></a>\r\n                            <a href='https://www.linkedin.com/' target=\"_blank\"><i className=\"fa-brands fa-linkedin\" /></a>\r\n                            <a href='https://www.google.com/' target=\"_blank\"><i className=\"fa-brands fa-google-plus-square\" /></a>\r\n                            <a href='https://www.twitter.com/' target=\"_blank\"><i className=\"fa-brands fa-twitter-square\" /></a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='text-center'>Copyright &copy; G-Shop</Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </footer >\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i  style={{color}} className={\r\n                    value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`} className='text-link'>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className='my-3 '>\r\n                        <Rating value={product.rating} color={'#ffa900'} />\r\n                        <p>{`${product.num_reviews} reviews`}</p>\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h4'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border' \r\n            role='status' \r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_LAST_REQUEST,\r\n    PRODUCT_LAST_SUCCESS,\r\n    PRODUCT_LAST_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keysearch = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${keysearch}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const ListLastProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LAST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products/last/');\r\n\r\n        dispatch({\r\n            type: PRODUCT_LAST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LAST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // If I update a product and then try to view it right away, we are going to have our original product data.\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { ListLastProducts } from '../actions/productActions'\r\n\r\n\r\nfunction LastProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const lastProducts = useSelector(state => state.lastProducts)\r\n    const { error, loading, products } = lastProducts\r\n\r\n    useEffect(() => {\r\n        dispatch(ListLastProducts())\r\n    }, dispatch)\r\n\r\n    return (loading ? <Loader />\r\n        : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel variant='dark' interval={2500}>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id} >\r\n\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image\r\n                                    src={product.image}\r\n                                    fluid\r\n                                />\r\n                                <Carousel.Caption>\r\n                                    <h5>{product.name}</h5>\r\n                                    <h6>New product</h6>\r\n                                </Carousel.Caption>\r\n\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n    )\r\n}\r\n\r\nexport default LastProductCarousel","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport LastProductCarousel from \"../components/LastProductCarousel\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen(history) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products } = productList;\r\n\r\n  let keysearch = history.location.search\r\n  console.log(keysearch)\r\n  useEffect(() => {\r\n    dispatch(listProducts(keysearch));\r\n  }, [dispatch, keysearch]);\r\n\r\n  return (\r\n    <div>\r\n      {!keysearch && <LastProductCarousel />}\r\n      <h1>Our Products</h1>\r\n      {loading ? <Loader />\r\n        : error ? <Message variant='danger'>{error}</Message>\r\n          :\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <div className='scale'>\r\n                  <Product product={product} />\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductsDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const createReview = useSelector(state => state.createReview)\r\n    const { loading: loadingProductReview, error: errorProductReview, success: successProductReview } = createReview\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductsDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?quantity=${quantity}`)\r\n\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'> Go Back </Link>\r\n\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={` ${product.num_reviews} reviews`} color={'#ffa900'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.count_in_stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.count_in_stock > 0 && (\r\n                                                // drop-down list\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Quantity:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control as='select' value={quantity} onChange={(e) => setQuantity(e.target.value)}>\r\n                                                                {\r\n                                                                    [...Array(product.count_in_stock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <div className=\"d-grid gap\">\r\n                                                    <Button\r\n                                                        onClick={addToCartHandler}\r\n                                                        className='btn-block'\r\n                                                        disabled={product.count_in_stock === 0 || product.count_in_stock < 0}\r\n                                                        type='button'>\r\n                                                        Add to Cart\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ListGroup.Item>\r\n\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color={'#ffa900'} />\r\n                                                <p>{review.created_at.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Nice</option>\r\n                                                            <option value='4'>4 - Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            raw='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        >\r\n\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                        className='py-2'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>You must me <Link to='/login'>logged in</Link> to write comment</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image,  Button, Card } from 'react-bootstrap';\r\n\r\nimport Message  from '../components/Message';\r\nimport { addToCart, deleteCart } from '../actions/cartActions';\r\n\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const quantity = location.search ? Number(location.search.split('=')[1]) : '1'\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, quantity ))\r\n        }\r\n    }, [dispatch, productId, quantity] )\r\n\r\n    const deleteFromCartHandler = (id) => {\r\n        dispatch(deleteCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Cart is empty <Link to='/' className='text-link'>Go Back</Link>\r\n                    </Message>\r\n                ) :(\r\n                    <ListGroup variant = 'flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`} className='text-link'>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={3}>\r\n                                        QTY: {item.quantity}\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button type='button' variant='light' onClick={() => deleteFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item ) => acc + item.quantity, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <div className=\"d-grid gap\">\r\n                                <Button \r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}    \r\n                                >\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_DELETE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    // Сохранение корзины в local storage в str\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const deleteCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_DELETE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddess = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={7} >\r\n                    { children }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className='text-center'>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'> \r\n                   <Form.Label>Email Adress</Form.Label>\r\n                   <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                   >\r\n                   </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' className='py-2'> \r\n                   <Form.Label>Password</Form.Label>\r\n                   <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                   >\r\n                   </Form.Control>\r\n                </Form.Group>\r\n                <div className='text-center py-2'>\r\n                    <Button type='submit' className='rounded'>Sign In</Button>\r\n                </div>\r\n            </Form>\r\n\r\n            <Row className='text-center'>\r\n                <Col>\r\n                    New to GShop? <Link to={redirect ? `/register?redirect=${redirect}`: '/register' } className='text-link'>Register</Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords must match ')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className='text-center'>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'> \r\n                   <Form.Label>Name</Form.Label>\r\n                   <Form.Control \r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter your name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                   >\r\n                   </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' className='py-2'> \r\n                   <Form.Label>Email Adress</Form.Label>\r\n                   <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                   >\r\n                   </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' className='py-2'> \r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                   </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword' className='py-2'> \r\n                   <Form.Label>Confirm password</Form.Label>\r\n                    <Form.Control\r\n                        required \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                   </Form.Control>\r\n                </Form.Group>\r\n\r\n                <div className='text-center py-2'>\r\n                    <Button type='submit' className='rounded'>Register</Button>\r\n                </div>\r\n\r\n            </Form>\r\n\r\n            <Row className='text-center'>\r\n                <Col>\r\n                    Already have an account? <Link to={redirect ? `/login?redirect=${redirect}`: '/login' } className='text-link'>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords must match ')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter your name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email' className='py-2'>\r\n                        <Form.Label>Email Adress</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password' className='py-2'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword' className='py-2'>\r\n                        <Form.Label>Confirm password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <div className='text-center py-2'>\r\n                        <Button type='submit' className='rounded'>Submit</Button>\r\n                    </div>\r\n\r\n                </Form>\r\n\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered </th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.created_at.substring(0,10)}</td>\r\n                                    <td>${order.total_price}</td>\r\n                                    <td>{order.is_paid ? order.paid_date.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/my-orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        // Need our user to send in our token or we need to be logged in to actually place an order.\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddess } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddess({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='country' className='py-2'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='country'\r\n                        placeholder='Enter your country'\r\n                        values={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city' className='py-2'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='city'\r\n                        placeholder='Enter your city'\r\n                        values={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address' className='py-2'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='address'\r\n                        placeholder='Enter your address'\r\n                        values={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode' className='py-2'>\r\n                    <Form.Label>Postal code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='postalCode'\r\n                        placeholder='Enter your postal code'\r\n                        values={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <div className='py-2' >\r\n                    <Button type='submit' className='rounded'>\r\n                        Continue\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({history}) {\r\n    const cart = useSelector(state => state.cart) \r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n                    <Col>\r\n                        <Form.Check\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' className='rounded'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\r\n    cart.shippingPrice = Number((0.01) * cart.itemsPrice).toFixed(0)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            // That's going to fire this reducer and then reset that object.\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.country}, {cart.shippingAddress.city},\r\n                                {' '}\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.postalCode}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Items</h2>\r\n                            {cart.cartItems.lenght === 0 ? <Message>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={6}>\r\n                                                    <Link to={`/product/${item.product}`} className='text-link'>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={5}>\r\n                                                    {item.quantity} X ${item.price} = ${(item.quantity * item.price).toFixed(2)}\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={8}>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={8}>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={8}>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <div className=\"d-grid gap\">\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn-block'\r\n                                        onClick={placeOrder}\r\n                                    >\r\n                                        Place Order\r\n                                    </Button>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({ match, history }) { //history for make sure that if a user is not logged in, he can't see deliver page\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.order_items.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=' // Paste your paypal client-id\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver ) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.is_paid) { // Check the state here of our order pay\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order ))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {orderId}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>Name: {order.user.name}</p>\r\n                            <p>Email: <a href={`mailto:${order.user.email}`}>{order.user.username}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shipping_address.country}, {order.shipping_address.city},\r\n                                {' '}\r\n                                {order.shipping_address.address}, {order.shipping_address.postal_code}\r\n                            </p>\r\n                            {order.is_delivered ? (\r\n                                <Message variant='success'>Delivered on {order.delivered_at.substring(0,10)}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not delivered</Message>\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.payment_method}\r\n                            </p>\r\n                            {order.is_paid ? (\r\n                                <Message variant='success'>Paid on {order.paid_date.substring(0,10)}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not paid</Message>\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Items</h2>\r\n                            {order.order_items.lenght === 0 ? <Message>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.order_items.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={6}>\r\n                                                    <Link to={`/product/${item.product}`} className='text-link'>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={5}>\r\n                                                    {item.quantity} X ${item.price} = ${(item.quantity * item.price).toFixed(2)}\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={8}>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={8}>Shipping:</Col>\r\n                                    <Col>${order.shipping_price}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={8}>Total:</Col>\r\n                                    <Col>${order.total_price}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.is_paid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.total_price}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader />}               \r\n                        {userInfo && userInfo.is_admin && order.is_paid && !order.is_delivered && (\r\n                            <ListGroup.Item>\r\n                                <div className=\"d-grid gap\">\r\n                                    <Button \r\n                                        type='button'\r\n                                        className='btn-block'\r\n                                        onClick={deliverHandler}\r\n                                    >\r\n                                        Mark as Deliver\r\n                                    </Button>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.deleteUser)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.is_admin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you shure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.is_admin ? (\r\n                                            <i className=\"fa-solid fa-check is-admin-true\"></i>\r\n                                        ) : (\r\n                                            <i className=\"fa-solid fa-xmark is-admin-false\"></i>\r\n                                        )}</td>\r\n                                        <td className='text-center'>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`} className='m-1'>\r\n                                                <Button className='btn-sm rounded'>\r\n                                                    <i className=\"fa-solid fa-marker\"></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button className='btn-sm rounded' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className=\"fa-solid fa-trash\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [is_admin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/users')\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setPassword(user.password)\r\n                setIsAdmin(user.is_admin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: user._id, name, email, is_admin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/users'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1 className='text-center'>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email' className='py-2'>\r\n                                <Form.Label>Email Adress</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='password' className='py-2'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Enter Password'\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='is_admin' className='py-2'>\r\n                                <Form.Label>Is Admin</Form.Label>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    checked={is_admin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <div className='text-center py-2'>\r\n                                <Button type='submit' className='rounded'>Update</Button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\n\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.is_admin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createProduct])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you shure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col sm={10}>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col sm={2}>\r\n                    <Button size='sm' className='my-3' onClick={createProductHandler}>\r\n                        New product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Category</th>\r\n                                    <th>Brand</th>\r\n                                    <th>Price $</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>{product.price}</td>\r\n                                        <td className='text-center'>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`} className='m-1'>\r\n                                                <Button className='btn-sm rounded'>\r\n                                                    <i className=\"fa-solid fa-marker\"></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button className='btn-sm rounded' onClick={() => deleteHandler(product._id)}>\r\n                                                <i className=\"fa-solid fa-trash\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [price, setPrice] = useState('0')\r\n    const [count_in_stock, setCountInStock] = useState('0')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/products')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setDescription(product.description)\r\n                setImage(product.image)\r\n                setCategory(product.category)\r\n                setBrand(product.brand)\r\n                setPrice(product.price)\r\n                setCountInStock(product.count_in_stock)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            description,\r\n            image,\r\n            category,\r\n            brand,\r\n            price,\r\n            count_in_stock\r\n        }))\r\n    }\r\n\r\n    // Its going to be async, because we need to send a post request, so i use axios\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId) //from our product views\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data' //lets me send that image field with post request\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n            \r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/products'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1 className='text-center'>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description' className='py-2'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='description'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image' className='py-2'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.Control\r\n                                    label='Choose file'\r\n                                    type='file'\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n                                </Form.Control>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category' className='py-2'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='category'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand' className='py-2'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='brand'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price' className='py-2'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='price'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='count_in_stock' className='py-2'>\r\n                                <Form.Label>Count in Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='count_in_stock'\r\n                                    placeholder='Count in Stock'\r\n                                    value={count_in_stock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <div className='text-center py-2'>\r\n                                <Button type='submit' className='rounded'>Update</Button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.is_admin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>User</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.created_at.substring(0, 10)}</td>\r\n                                        <td>{order.total_price}</td>\r\n\r\n                                        <td>{order.is_paid ? (\r\n                                            order.paid_date.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className=\"fa-solid fa-xmark is-admin-false\"></i>\r\n                                        )}</td>\r\n\r\n                                        <td>{order.is_delivered ? (\r\n                                            order.delivered_at.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className=\"fa-solid fa-xmark is-admin-false\"></i>\r\n                                        )}</td>\r\n\r\n                                        <td className='text-center'>\r\n                                            <LinkContainer to={`/order/${order._id}`} className='m-1'>\r\n                                                <Button className='btn-sm rounded'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react'\nimport { Container } from \"react-bootstrap\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/admin/users' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/products' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orders/' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer className py/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}